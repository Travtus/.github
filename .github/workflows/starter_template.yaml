name: Pull request checks

on:
  workflow_call:
    secrets:
      PAT_GITHUB:
        required: true
    inputs:
      PYTHON_VERSION:
        type: string
        default: "3.8"
        required: false
      ENABLE_PYTEST:
        type: boolean
        description: Run pytest against test files
        default: true
        required: false
      ENABLE_BDD:
        type: boolean
        description: Run BDD tests
        default: false
        required: false
      ENABLE_FORMAT:
        type: boolean
        description: Run format tools
        default: false
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
  PY_GLOB: "./**/*.py"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}
      - name: Set up Python ${{ inputs.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}
      - name: Get file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            changed_py:
              - added|modified: ${{ env.PY_GLOB }}
      - name: Install dependencies
        if: ${{ steps.filter.outputs.changed_py == 'true' }}
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pylint isort black
          find . -name "requirements*.txt" -maxdepth 3 -exec pip install --upgrade -r {} \;
      - name: Format code
        if: ${{ steps.filter.outputs.changed_py == 'true' && inputs.ENABLE_FORMAT }}
        run: |
          isort ${{ steps.filter.outputs.changed_py_files }}
          black ${{ steps.filter.outputs.changed_py_files }}
      - name: Commit changes
        id: commit_changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Format changed files
      - name: Check if commit
        if: ${{ steps.commit_changes.outputs.changes_detected == 'true' }}
        run: exit 1
      - name: Analysing the code with pylint
        if: ${{ steps.filter.outputs.changed_py == 'true' }}
        run: |
          # check for import errors
          pylint -d all -e E0401 **/*.py
      - name: Lint with flake8
        if: ${{ steps.filter.outputs.changed_py == 'true' }}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --max-line-length=127 --statistics
      - name: Test with pytest
        if: ${{ steps.filter.outputs.changed_py == 'true' && inputs.ENABLE_PYTEST }}
        run: |
          python -m pytest
      - name: Test with behave
        if: ${{ steps.filter.outputs.changed_py == 'true' && inputs.ENABLE_BDD }}
        run: |
          behave ./bdd_tests/features/
